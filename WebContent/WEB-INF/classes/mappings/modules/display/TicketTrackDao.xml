<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cpit.testplatform.modules.display.dao.TicketTrackDao" >
  <resultMap id="BaseResultMap" type="com.cpit.testplatform.modules.display.entity.TicketTrack" >
    <id column="ticket_id" property="ticketId" jdbcType="VARCHAR" />
    <id column="record_time" property="recordTime" jdbcType="TIMESTAMP" />
    <result column="longtitude" property="longtitude" jdbcType="DOUBLE" />
    <result column="latitude" property="latitude" jdbcType="DOUBLE" />
    <result column="altitude" property="altitude" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ticket_id, record_time, longtitude, latitude, altitude
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cpit.testplatform.modules.display.entity.TicketTrackExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ticket_track
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.cpit.testplatform.modules.display.entity.TicketTrackKey" >
    select 
    <include refid="Base_Column_List" />
    from ticket_track
    where ticket_id = #{ticketId,jdbcType=VARCHAR}
      and record_time = #{recordTime,jdbcType=TIMESTAMP}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.cpit.testplatform.modules.display.entity.TicketTrackKey" >
    delete from ticket_track
    where ticket_id = #{ticketId,jdbcType=VARCHAR}
      and record_time = #{recordTime,jdbcType=TIMESTAMP}
  </delete>
  <delete id="deleteByExample" parameterType="com.cpit.testplatform.modules.display.entity.TicketTrackExample" >
    delete from ticket_track
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cpit.testplatform.modules.display.entity.TicketTrack" >
    insert into ticket_track (ticket_id, record_time, longtitude, 
      latitude, altitude)
    values (#{ticketId,jdbcType=VARCHAR}, #{recordTime,jdbcType=TIMESTAMP}, #{longtitude,jdbcType=DOUBLE}, 
      #{latitude,jdbcType=DOUBLE}, #{altitude,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.cpit.testplatform.modules.display.entity.TicketTrack" >
    insert into ticket_track
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ticketId != null" >
        ticket_id,
      </if>
      <if test="recordTime != null" >
        record_time,
      </if>
      <if test="longtitude != null" >
        longtitude,
      </if>
      <if test="latitude != null" >
        latitude,
      </if>
      <if test="altitude != null" >
        altitude,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ticketId != null" >
        #{ticketId,jdbcType=VARCHAR},
      </if>
      <if test="recordTime != null" >
        #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="longtitude != null" >
        #{longtitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="altitude != null" >
        #{altitude,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cpit.testplatform.modules.display.entity.TicketTrackExample" resultType="java.lang.Integer" >
    select count(*) from ticket_track
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ticket_track
    <set >
      <if test="record.ticketId != null" >
        ticket_id = #{record.ticketId,jdbcType=VARCHAR},
      </if>
      <if test="record.recordTime != null" >
        record_time = #{record.recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.longtitude != null" >
        longtitude = #{record.longtitude,jdbcType=DOUBLE},
      </if>
      <if test="record.latitude != null" >
        latitude = #{record.latitude,jdbcType=DOUBLE},
      </if>
      <if test="record.altitude != null" >
        altitude = #{record.altitude,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ticket_track
    set ticket_id = #{record.ticketId,jdbcType=VARCHAR},
      record_time = #{record.recordTime,jdbcType=TIMESTAMP},
      longtitude = #{record.longtitude,jdbcType=DOUBLE},
      latitude = #{record.latitude,jdbcType=DOUBLE},
      altitude = #{record.altitude,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cpit.testplatform.modules.display.entity.TicketTrack" >
    update ticket_track
    <set >
      <if test="longtitude != null" >
        longtitude = #{longtitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null" >
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="altitude != null" >
        altitude = #{altitude,jdbcType=DOUBLE},
      </if>
    </set>
    where ticket_id = #{ticketId,jdbcType=VARCHAR}
      and record_time = #{recordTime,jdbcType=TIMESTAMP}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cpit.testplatform.modules.display.entity.TicketTrack" >
    update ticket_track
    set longtitude = #{longtitude,jdbcType=DOUBLE},
      latitude = #{latitude,jdbcType=DOUBLE},
      altitude = #{altitude,jdbcType=DOUBLE}
    where ticket_id = #{ticketId,jdbcType=VARCHAR}
      and record_time = #{recordTime,jdbcType=TIMESTAMP}
  </update>
  
      <select id="findList" parameterType="com.cpit.testplatform.modules.display.entity.TicketTrack" resultMap="BaseResultMap" >
    select  <include refid="Base_Column_List" />
     from ticket_track
    where ticket_id = #{ticketId,jdbcType=VARCHAR}
  </select>

</mapper>